name: Container Security Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'server/Dockerfile'
      - 'server/docker/**'
      - 'server/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/Dockerfile'
      - 'server/docker/**'
      - 'server/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  dockerfile-lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint Dockerfile with hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: server/Dockerfile

  shellcheck:
    name: Lint Shell Scripts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Run ShellCheck on all shell scripts
        run: |
          find ./server/docker -type f -name "*.sh" -exec shellcheck {} \;
          find ./server/scripts -type f -name "*.sh" -exec shellcheck {} \;

  security-tests:
    name: Docker Container Security Tests
    runs-on: ubuntu-latest
    needs: [dockerfile-lint, shellcheck]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Docker image
        run: |
          docker build -f server/Dockerfile -t ably-cli-sandbox:test .
          echo "âœ… Image built successfully"

      - name: Run server security tests
        run: |
          cd server
          pnpm install
          pnpm build
          pnpm test:integration
        env:
          E2E_ABLY_API_KEY: ${{ secrets.E2E_ABLY_API_KEY }}

      - name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ably-cli-sandbox:test'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
