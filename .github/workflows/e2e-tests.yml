name: E2E Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'test/**'
      - 'examples/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'tsconfig.json'
      - '.github/workflows/e2e-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'test/**'
      - 'examples/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'tsconfig.json'
      - '.github/workflows/e2e-tests.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  e2e-cli:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      E2E_ABLY_API_KEY: ${{ secrets.E2E_ABLY_API_KEY }}
      E2E_TESTS: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run build

      - name: Lint check
        run: pnpm run lint

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Set up test environment
        run: |
          echo "ABLY_API_KEY=${{ secrets.E2E_ABLY_API_KEY }}" > .env.test
          echo "E2E_ABLY_API_KEY=${{ secrets.E2E_ABLY_API_KEY }}" >> .env.test

      - name: Run E2E Basic CLI Tests  
        run: |
          echo "Running E2E Basic CLI Tests..."
          timeout 900s pnpm test:e2e:basic || {
            echo "E2E Basic CLI tests failed or timed out"
            exit 1
          }

      - name: Run E2E Channel Tests
        run: |
          echo "Running E2E Channel Tests..."
          timeout 900s pnpm test:e2e:channels || {
            echo "E2E Channel tests failed or timed out"
            exit 1
          }

      - name: Run E2E Commands Tests
        run: |
          echo "Running E2E Commands Tests..."
          timeout 900s pnpm test:e2e:commands || {
            echo "E2E Commands tests failed or timed out"
            exit 1
          }

      - name: Run E2E Spaces Tests
        run: |
          echo "Running E2E Spaces Tests..."
          timeout 900s pnpm test:e2e:spaces || {
            echo "E2E Spaces tests failed or timed out"
            exit 1
          }

      - name: Run E2E Rooms Tests  
        run: |
          echo "Running E2E Rooms Tests..."
          timeout 900s pnpm test:e2e:rooms || {
            echo "E2E Rooms tests failed or timed out"
            exit 1
          }

      - name: Run E2E Control API Tests
        run: |
          echo "Running E2E Control API Tests..."
          timeout 900s pnpm test:e2e:control || {
            echo "E2E Control API tests failed or timed out"
            exit 1
          }

  e2e-web-cli:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    env:
      E2E_ABLY_API_KEY: ${{ secrets.E2E_ABLY_API_KEY }}
      E2E_TESTS: true
      HEADLESS: true
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright
        run: pnpm exec playwright install --with-deps chromium

      - name: Build React Web CLI
        run: pnpm --filter @ably/react-web-cli build

      - name: Build Web CLI Example
        run: |
          cd examples/web-cli
          pnpm build

      - name: Run Web CLI E2E Tests
        run: |
          echo "Running Web CLI E2E Tests (using web-cli.ably.com)..."
          timeout 1800s pnpm test:e2e:web-cli || {
            echo "Web CLI E2E tests failed or timed out"
            echo "Attempting to gather artifacts..."
            if [ -d "test-results" ]; then
              echo "Test results directory exists"
              ls -la test-results/
            fi
            if [ -d "playwright-report" ]; then
              echo "Playwright report directory exists"
              ls -la playwright-report/
            fi
            exit 1
          }

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-web-cli
          path: |
            playwright-report/
            test-results/
          retention-days: 7
